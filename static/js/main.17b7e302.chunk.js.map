{"version":3,"sources":["components/DayListItem.js","components/DayList.js","components/Appointment/Header.js","components/Appointment/Show.js","components/Appointment/Empty.js","components/InterviewerListItem.js","components/InterviewerList.js","components/Button.js","components/Appointment/Form.js","components/Appointment/Status.js","components/Appointment/Confirm.js","components/Appointment/Error.js","hooks/useVisualMode.js","components/Appointment/index.js","helpers/selectors.js","hooks/useApplicationData.js","components/Application.js","index.js"],"names":["formatSpots","spots","concat","DayListItem","props","dayClass","classNames","day-list__item--selected","selected","day-list__item--full","react_default","a","createElement","className","onClick","setDay","name","data-testid","DayList","days","map","day","DayListItem_DayListItem","key","id","Header","time","Show","student","interviewer","src","alt","onEdit","onDelete","Empty","onAdd","InterviewerListItem","interviewerClass","interviewers__item--selected","setInterviewer","avatar","InterviewerList","interviewers","src_components_InterviewerListItem","value","onChange","Button","buttonClass","button--confirm","confirm","button--danger","danger","disabled","children","Form","_useState","useState","_useState2","Object","slicedToArray","setName","_useState3","_useState4","_useState5","_useState6","error","setError","autoComplete","onSubmit","event","preventDefault","type","placeholder","target","src_components_InterviewerList","Button_Button","onCancel","onSave","Status","message","Confirm","onConfirm","Error","onClose","useVisualMode","initial","mode","setMode","history","setHistory","transition","replace","arguments","length","undefined","historyArr","toConsumableArray","push","back","pop","Appointment","EMPTY","SHOW","SAVING","DELETING","CONFIRM","ERROR_SAVE","ERROR_DELETE","_useVisualMode","interview","save","bookInterview","then","catch","Appointment_Header","Appointment_Empty","Appointment_Show","Appointment_Form","Appointment_Status","Appointment_Confirm","cancelInterview","Appointment_Error","getAppointmentsForDay","state","appointments","currentDay","find","x","forEach","updateRemainingSpotsForDay","spotsCounter","appointment","dayObj","index","findIndex","useApplicationData","setState","useEffect","Promise","all","axios","get","prev","objectSpread","data","defineProperty","put","delete","Application","_useApplicationData","getInterviewersForDay","schedule","interviewObj","getInterview","components_Appointment","ReactDOM","render","Application_Application","document","getElementById"],"mappings":"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","file":"static/js/main.17b7e302.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"components/DayListItem.scss\";\n\nconst formatSpots = (spots) => {\n  let output = \"\";\n  if (spots === 0) {\n    output = \"no spots remaining\";\n  } else if (spots === 1) {\n    output = `${spots} spot remaining`;\n  } else {\n    output = `${spots} spots remaining`;\n  }\n\n  return output;\n};\n\nexport default function DayListItem(props) {\n  let dayClass = classNames(\"day-list__item\", {\n    \"day-list__item--selected\": props.selected,\n    \"day-list__item--full\": props.spots === 0,\n  });\n\n  return (\n    <li\n      className={dayClass}\n      onClick={() => props.setDay(props.name)}\n      data-testid=\"day\"\n    >\n      <h2 className=\"text--regular\">{props.name}</h2>\n      <h3 className=\"text--light\">{formatSpots(props.spots)}</h3>\n    </li>\n  );\n}\n","import React from \"react\";\nimport DayListItem from \"./DayListItem\";\n\nexport default function DayList(props) {\n  const days = props.days.map((day) => {\n    return (\n      <DayListItem\n        key={day.id}\n        name={day.name}\n        spots={day.spots}\n        selected={day.name === props.day}\n        setDay={props.setDay}\n      />\n    );\n  });\n\n  return <ul>{days}</ul>;\n}\n","import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <header className=\"appointment__time\">\n      <h4 className=\"text--semi-bold\">{props.time}</h4>\n      <hr className=\"appointment__separator\" />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Show = (props) => {\n  return (\n    <main className=\"appointment__card appointment__card--show\">\n      <section className=\"appointment__card-left\">\n        <h2 className=\"text--regular\">{props.student}</h2>\n        <section className=\"interviewer\">\n          <h4 className=\"text--light\">Interviewer</h4>\n          <h3 className=\"text--regular\">{props.interviewer.name}</h3>\n        </section>\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/edit.png\"\n            alt=\"Edit\"\n            onClick={props.onEdit}\n          />\n          <img\n            className=\"appointment__actions-button\"\n            src=\"images/trash.png\"\n            alt=\"Delete\"\n            onClick={props.onDelete}\n          />\n        </section>\n      </section>\n    </main>\n  );\n};\n\nexport default Show;\n","import React from \"react\";\n\nconst Empty = (props) => {\n  return (\n    <main className=\"appointment__add\">\n      <img\n        className=\"appointment__add-button\"\n        src=\"images/add.png\"\n        alt=\"Add\"\n        onClick={props.onAdd}\n      />\n    </main>\n  );\n};\n\nexport default Empty;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./InterviewerListItem.scss\";\n\nconst InterviewerListItem = (props) => {\n  let interviewerClass = classNames(\"interviewers__item\", {\n    \"interviewers__item--selected\": props.selected,\n  });\n\n  return (\n    <li className={interviewerClass} onClick={props.setInterviewer}>\n      <img\n        className=\"interviewers__item-image\"\n        src={props.avatar}\n        alt={props.name}\n      />\n      {props.selected && props.name}\n    </li>\n  );\n};\n\nexport default InterviewerListItem;\n","import React from \"react\";\nimport \"./InterviewerList.scss\";\nimport PropTypes from \"prop-types\";\n\nimport InterviewListItem from \"./InterviewerListItem\";\n\nconst InterviewerList = (props) => {\n  const interviewers = props.interviewers.map((interviewer) => {\n    return (\n      <InterviewListItem\n        key={interviewer.id}\n        name={interviewer.name}\n        avatar={interviewer.avatar}\n        selected={interviewer.id === props.value}\n        setInterviewer={() => props.onChange(interviewer.id)}\n      />\n    );\n  });\n\n  InterviewerList.propTypes = {\n    value: PropTypes.number,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  return (\n    <section className=\"interviewers\">\n      <h4 className=\"interviewers__header text--light\">Interviewer</h4>\n      <ul className=\"interviewers__list\">{interviewers}</ul>\n    </section>\n  );\n};\n\nexport default InterviewerList;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"components/Button.scss\";\n\nexport default function Button(props) {\n  let buttonClass = classNames(\"button\", {\n    \"button--confirm\": props.confirm,\n    \"button--danger\": props.danger,\n  });\n\n  return (\n    <button\n      className={buttonClass}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport InterviewerList from \"../InterviewerList\";\nimport Button from \"../Button\";\n\nconst Form = (props) => {\n  const [name, setName] = useState(props.name || \"\");\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n  const [error, setError] = useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n    setInterviewer(null);\n  };\n\n  const cancel = () => {\n    reset();\n    props.onCancel();\n  };\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n\n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            data-testid=\"student-name-input\"\n          />\n        </form>\n        <section className=\"appointment__validation\">{error}</section>\n        <InterviewerList\n          interviewers={props.interviewers}\n          value={interviewer}\n          onChange={setInterviewer}\n        />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={cancel}>\n            Cancel\n          </Button>\n          <Button confirm onClick={validate}>\n            Save\n          </Button>\n        </section>\n      </section>\n    </main>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Status = (props) => {\n  return (\n    <main className=\"appointment__card appointment__card--status\">\n      <img\n        className=\"appointment__status-image\"\n        src=\"images/status.png\"\n        alt=\"Loading\"\n      />\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n    </main>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport Button from \"../Button\";\n\nconst Confirm = (props) => {\n  return (\n    <main className=\"appointment__card appointment__card--confirm\">\n      <h1 className=\"text--semi-bold\">{props.message}</h1>\n      <section className=\"appointment__actions\">\n        <Button danger onClick={props.onCancel}>\n          Cancel\n        </Button>\n        <Button danger onClick={props.onConfirm}>\n          Confirm\n        </Button>\n      </section>\n    </main>\n  );\n};\n\nexport default Confirm;\n","import React from \"react\";\n\nconst Error = (props) => {\n  return (\n    <main className=\"appointment__card appointment__card--error\">\n      <section className=\"appointment__error-message\">\n        <h1 className=\"text--semi-bold\">Error</h1>\n        <h3 className=\"text--light\">{props.message}</h3>\n      </section>\n      <img\n        className=\"appointment__error-close\"\n        src=\"images/close.png\"\n        alt=\"Close\"\n        onClick={props.onClose}\n      />\n    </main>\n  );\n};\n\nexport default Error;\n","import { useState } from \"react\";\n\nconst useVisualMode = (initial) => {\n  const [mode, setMode] = useState(initial);\n  const [history, setHistory] = useState([initial]);\n\n  const transition = (mode, replace = false) => {\n    const historyArr = [...history];\n\n    if (replace) {\n      historyArr[historyArr.length - 1] = mode;\n    } else {\n      historyArr.push(mode);\n    }\n\n    setMode(historyArr[historyArr.length - 1]);\n    setHistory(historyArr);\n  };\n\n  const back = () => {\n    const historyArr = [...history];\n\n    if (historyArr.length > 1) {\n      historyArr.pop();\n    }\n\n    setMode(historyArr[historyArr.length - 1]);\n\n    setHistory(historyArr);\n  };\n\n  return { mode, transition, back };\n};\n\nexport default useVisualMode;\n","import React from \"react\";\nimport \"./styles.scss\";\n\nimport Header from \"./Header\";\nimport Show from \"./Show\";\nimport Empty from \"./Empty\";\nimport Form from \"./Form\";\nimport Status from \"./Status\";\nimport Confirm from \"./Confirm\";\nimport Error from \"./Error\";\n\nimport useVisualMode from \"../../hooks/useVisualMode\";\n\nconst Appointment = (props) => {\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const SAVING = \"SAVING\";\n  const DELETING = \"DELETING\";\n  const CONFIRM = \"CONFIRM\";\n  const EDIT = \"EDIT\";\n  const ERROR_SAVE = \"ERROR_SAVE\";\n  const ERROR_DELETE = \"ERROR_DELETE\";\n\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n\n  function save(name, interviewer) {\n    const interview = {\n      student: name,\n      interviewer,\n    };\n\n    transition(SAVING, true);\n\n    props\n      .bookInterview(props.id, interview)\n      .then(() => {\n        transition(SHOW);\n      })\n      .catch((error) => transition(ERROR_SAVE, true));\n  }\n\n  function showConfirmDelete() {\n    transition(CONFIRM);\n  }\n\n  function deleteInterview() {\n    transition(DELETING, true);\n    props\n      .cancelInterview(props.id)\n      .then(() => {\n        transition(EMPTY);\n      })\n      .catch((error) => transition(ERROR_DELETE, true));\n  }\n\n  return (\n    <article className=\"appointment\" data-testid=\"appointment\">\n      <Header time={props.time} />\n      {mode === EMPTY && <Empty onAdd={() => transition(CREATE)} />}\n      {mode === SHOW && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n          onDelete={showConfirmDelete}\n          onEdit={() => transition(EDIT)}\n        />\n      )}\n      {mode === CREATE && (\n        <Form\n          interviewers={props.interviewers}\n          onSave={save}\n          onCancel={() => back()}\n        />\n      )}\n      {mode === SAVING && <Status message=\"Saving\" />}\n      {mode === DELETING && <Status message=\"Deleting\" />}\n      {mode === CONFIRM && (\n        <Confirm\n          message=\"Are you sure you would like to delete?\"\n          onCancel={() => back()}\n          onConfirm={deleteInterview}\n        />\n      )}\n      {mode === EDIT && (\n        <Form\n          interviewers={props.interviewers}\n          onSave={save}\n          onCancel={() => back()}\n          name={props.interview.student}\n          interviewer={props.interview.interviewer.id}\n        />\n      )}\n      {mode === ERROR_SAVE && (\n        <Error message={\"Error while saving\"} onClose={() => back()} />\n      )}\n      {mode === ERROR_DELETE && (\n        <Error message={\"Error while deleting\"} onClose={() => back()} />\n      )}\n    </article>\n  );\n};\n\nexport default Appointment;\n","export function getAppointmentsForDay(state, day) {\n  const appointments = [];\n  const currentDay = state.days.find((x) => x.name === day);\n  currentDay &&\n    currentDay.appointments.forEach((x) => {\n      x in state.appointments && appointments.push(state.appointments[x]);\n    });\n  return appointments;\n}\n\nexport function getInterviewersForDay(state, day) {\n  const interviewers = [];\n  const currentDay = state.days.find((x) => x.name === day);\n  currentDay &&\n    currentDay.interviewers.forEach((x) => {\n      x in state.interviewers && interviewers.push(state.interviewers[x]);\n    });\n  return interviewers;\n}\n\nexport function updateRemainingSpotsForDay(state, day) {\n  let spotsCounter = 0;\n  const appointments = getAppointmentsForDay(state, day);\n\n  // count the number of days where interview is null\n  appointments.forEach((appointment) => {\n    if (appointment.interview === null) {\n      spotsCounter += 1;\n    }\n  });\n\n  // Extract current day object from state.days\n  const dayObj = state.days.find((x) => x.name === day);\n\n  // Set its spots field to our calculated number of spots\n  dayObj.spots = spotsCounter;\n\n  // Get index of the current day inside state.days\n  const index = state.days.findIndex((x) => x.name === day);\n\n  // Make a copy of state.days array\n  const days = [...state.days];\n\n  // Replace day at index with our updated dayObj\n  days[index] = dayObj;\n\n  return days;\n}\n\nexport function getInterview(state, interview) {\n  if (interview === null) {\n    return interview;\n  }\n\n  const interviewObj = {};\n  const interviewer = state.interviewers[interview.interviewer];\n  interviewObj.interviewer = interviewer;\n  interviewObj.student = interview.student;\n\n  return interviewObj;\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { updateRemainingSpotsForDay } from \"../helpers/selectors\";\n\nconst useApplicationData = () => {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: [],\n    interviewers: [],\n  });\n\n  function bookInterview(id, interview) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview },\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n\n    return axios.put(`https://devmikh-scheduler-api.herokuapp.com/api/appointments/${id}`, { interview }).then(() => {\n      // update state with a new appointments array\n      setState({\n        ...state,\n        appointments,\n      });\n\n      // update state with a new days array (remaining spots are calculated based on the updated appointments)\n      setState((prev) => {\n        const days = updateRemainingSpotsForDay(prev, prev.day);\n        return {\n          ...prev,\n          days,\n        };\n      });\n    });\n  }\n\n  function cancelInterview(id) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: null,\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n\n    return axios.delete(`https://devmikh-scheduler-api.herokuapp.com/api/appointments/${id}`).then(() => {\n      // update the state with a new appointments array\n      setState({\n        ...state,\n        appointments,\n      });\n\n      // update state with a new days array (remaining spots are calculated based on the updated appointments)\n      setState((prev) => {\n        const days = updateRemainingSpotsForDay(prev, prev.day);\n        return {\n          ...prev,\n          appointments,\n          days,\n        };\n      });\n    });\n  }\n\n  const setDay = (day) => setState({ ...state, day });\n\n  // make a get request to the API server, retrieve data and populate the state with it (happens one time)\n  useEffect(() => {\n    Promise.all([\n      axios.get(\"https://devmikh-scheduler-api.herokuapp.com/api/days\"),\n      axios.get(\"https://devmikh-scheduler-api.herokuapp.com/api/appointments\"),\n      axios.get(\"https://devmikh-scheduler-api.herokuapp.com/api/interviewers\"),\n    ]).then((all) => {\n      // copy the previous state, then add new data to it\n      setState((prev) => ({\n        ...prev,\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data,\n      }));\n    });\n  }, []);\n\n  return { state, setDay, bookInterview, cancelInterview };\n};\n\nexport default useApplicationData;\n","import React from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"./Appointment\";\nimport {\n  getAppointmentsForDay,\n  getInterviewersForDay,\n  getInterview,\n} from \"../helpers/selectors\";\nimport useApplicationData from \"../hooks/useApplicationData\";\n\nimport \"components/Application.scss\";\n\nexport default function Application(props) {\n  const {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview,\n  } = useApplicationData();\n\n  const interviewers = getInterviewersForDay(state, state.day);\n  const appointments = getAppointmentsForDay(state, state.day);\n\n  const schedule = appointments.map((appointment) => {\n    const interview = getInterview(state, appointment.interview);\n    return (\n      <Appointment\n        key={appointment.id}\n        id={appointment.id}\n        time={appointment.time}\n        interview={interview}\n        interviewers={interviewers}\n        bookInterview={bookInterview}\n        cancelInterview={cancelInterview}\n      />\n    );\n  });\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {schedule}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"index.scss\";\n\nimport Application from \"components/Application\";\n\nReactDOM.render(<Application />, document.getElementById(\"root\"));\n"],"sourceRoot":""}